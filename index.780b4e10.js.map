{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@swc/helpers/lib/_class_private_field_set.js","node_modules/@swc/helpers/lib/_define_property.js","src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","console.log('Hello, Mary!');\n// ____________________________________;\n\nfunction checkForSpam(message) {\n  let result;\n  // Change code below this line\n  const stopword1 = 'spam';\n  const stopword2 = 'sale';\n  message = message.toLowerCase();\n  result = message.includes(stopword1) || message.includes(stopword2);\n\n  // Change code above this line\n  return result;\n}\n\nfunction checkForName(fullName, name) {\n  const result = fullName.includes(name); // Change this line\n  return result;\n}\n\n// function getShippingCost(country) {\n//   let message;\n//   // Change code below this line\n\n//   switch (\n//     country // Change this line\n//   ) {\n//     case \"Australia\":\n//       price = 170;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Germany\":\n//       message = \"Sorry, there is no delivery to your country\";\n//       break;\n//     case \"China\":\n//       price = 100;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Chile\":\n//       price = 250;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Jamaica\":\n//       price = 120;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Sweden\":\n//       message = \"Sorry, there is no delivery to your country\";\n//       break;\n//     default:\n//       message = \"Sorry, there is no delivery to your country\";\n//   }\n//   // Change code above this line\n//   return message;\n// }\n\n// const x = getShippingCost(\"Australia\");\n\n// console.log(x);\n// ____________________________________;\n\nconst stars = 3;\nlet pricee;\n\n// if (stars === 1) {\n//   price = 20;\n// } else if (stars === 2) {\n//   price = 30;\n// } else if (stars === 3) {\n//   price = 50;\n// } else if (stars === 4) {\n//   price = 70;\n// } else if (stars === 5) {\n//   price = 120;\n// } else {\n//   console.log(\"Такого количества звезд нет\");\n// }\n\n// ________________________\n\nswitch (stars) {\n  case 1:\n    pricee = 20;\n    break;\n\n  case 2:\n    pricee = 30;\n    break;\n\n  case 3:\n    pricee = 50;\n    break;\n\n  default:\n    console.log('Такого количества звезд нет');\n}\n\nconsole.log(pricee);\n\n// 1. назначить переменные\n\nconst option = 1;\nlet message = '';\n\n// //  2. Записать свитч выбора опции\n\nswitch (option) {\n  case 1:\n    message = 'Вы сможете забрать товар завтра с 12:00 в нашем офисе';\n    break;\n\n  case 2:\n    message = 'Курьер доставит заказ завтра с 9:00 до 18:00';\n    break;\n\n  case 3:\n    message = 'Посылка будет отправлена сегодня';\n    break;\n\n  default:\n    message = 'Вам перезвонит менеджер';\n}\n\n// // 3. Сделать лог месседж\n\nconsole.log(message);\n\n// // Цыклы. Цыкл for\n\nfor (let i = 10; i < 20; i += 1) {\n  console.log(i);\n}\n\nconsole.log('jsdjs');\n\n// Цикл for\n// Общая сумма зарплаты работникам, которая генерится случайными числами от 500 до 5000\n// Перемненная зп totalSalary, переменная по работникам employees. Принимаем количество работников произвольное - 4 например\n// 1. назначаем переменнные\nconst employees = 4;\nlet totalSalary = 0;\n// // если нет работников тотал салари принимем равным нулю, поскольку эта пременная будет меняться, принимаем ее через let\nconst minSalary = 500;\nconst maxSalary = 5000;\n\nfor (let i = 1; i < 5; i += 1) {\n  const salary = Math.round(\n    Math.random() * (maxSalary - minSalary) + minSalary\n  );\n  console.log(`ЗП работника номер ${i} - ${salary}`);\n\n  totalSalary += salary;\n}\n\nconsole.log('totalSalary: ', totalSalary);\n\n// скрипт подсчета суммы всех четных чисел в диапазоне от min до max\nconst min = 6;\nconst max = 13;\nlet total = 0;\n\nfor (let i = min; i <= max; i += 1) {\n  console.log(i);\n  if (i % 2 === 0) {\n    console.log('четное: ', i);\n  }\n}\n// _________\n\n// const y = Math.round(Math.random() * 100 + 1); // 1-100\n// let userInput;\n\n// do {\n//   userInput = Number(prompt(\"Enter a number (1-100)\"));\n\n//   if (y > userInput) {\n//     console.log(\"y >\", userInput);\n//   } else if (x < userInput) {\n//     console.log(\"y <\", userInput);\n//   }\n// } while (y !== userInput);\n\n// console.log(\"You won!\");\n\n// ___________________________________\n\n// const result = 10 + 100 - 2 * 5;\n// console.log(result);\n\n// function multiply(a, b) {\n//   a * b;\n// }\n\n// const array = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n// let array = [\"a\", \"b\", \"c\", \"d\", \"e\"];\nconst array = ['a', 'b', 'c', 'd', 'e'];\nconsole.log(array);\n\n// function getExtremeElements(array) {\n//   array.splice(array[1], 3);\n//   return array; // Change code above this line\n// }\n\n// console.log(getExtremeElements(\"a\", \"b\", \"c\", \"d\", \"e\"));\n\n// _____________________________________\n\nconst friends = ['Andriy', 'Mary', 'Misha', 'Masha'];\nconsole.table(friends);\nconst lastIndex = friends.length - 1;\n\nfor (i = 0; i <= lastIndex; i += 1) {\n  friends[i] += '-1';\n}\nconsole.table(friends);\n\n// _________________________________________\n\nconst title = 'Andriy Mary Misha Masha';\n\nfunction slugify(title) {\n  let result;\n  result = title.split(' ').join('-').toLowerCase();\n  return result;\n  // Change code above this line\n}\nconsole.log(title.split(' ').join('-').toLowerCase());\nconsole.log(slugify('Andriy Mary Misha Masha'));\n\n// _______________________________________________\n\nfunction checkForSpam(message) {\n  let result;\n\n  const stopword1 = 'spam';\n  const stopword2 = 'sale';\n  message = message.toLowerCase();\n  result = message.includes(stopword1) || message.includes(stopword2);\n\n  return result;\n}\n\nfunction makeArray(firstArray, secondArray, maxLength) {\n  // Change code below this line\n\n  const allArray = firstArray.concat(secondArray);\n  const allArray1 = allArray.slice(0, maxLength);\n\n  if (allArray.length <= maxLength) {\n    return allArray;\n  }\n  if (allArray.length > maxLength) {\n    return allArray1;\n  }\n  return allArray;\n  // Change code above this line\n}\n\nconsole.log(makeArray(['Mango', 'Poly'], ['Ajax', 'Chelsea'], 3));\nconsole.log(makeArray(['Earth', 'Jupiter'], ['Neptune', 'Uranus', 'Venus'], 0));\nconsole.log(makeArray(['Earth', 'Jupiter'], ['Neptune', 'Uranus'], 4));\n\n// ________________________________________\n\n// const dogs = [1, 2, 3, 4, 5, 6, 7];\n\n// console.log(dogs.length);\n\n// function calculateTotal(number) {\n//   let total = 0;\n\n//   for (let i = 0; i < dogs.length; i += 1) {\n//     console.log(dogs[i]);\n//     total += dogs[i];\n//   }\n// }\n\n// console.log(calculateTotal(7));\n\nconst clients = ['Mango', 'Ajax', 'Poly'];\n\nfor (let i = 0; i < clients.length; i += 1) {\n  console.log(clients[i]);\n}\n\n// __________________________\n\nfunction findLongestWord(string) {\n  // Change code below this line\n  const words = string.split(' ');\n\n  let biggestWord = words[0];\n\n  for (let word of words) {\n    if (word.length > biggestWord.length) {\n      biggestWord = word;\n    }\n  }\n  return biggestWord;\n  // Change code above this line\n}\n\nconsole.log(findLongestWord('The quick brown fox jumped over the lazy dog'));\n\nfunction createArrayOfNumbers(min, max) {\n  const numbers = [];\n\n  let number;\n  numbers[0] = min;\n\n  for (i = min; i <= max - 1; i += 1) {\n    number = numbers.push((min += 1));\n  }\n\n  return numbers;\n}\n\nconsole.log(createArrayOfNumbers(1, 3));\n\n// _________________________________\n\nfunction filterArray(numbers, value) {\n  let filterNumbers = [];\n  for (let number of numbers) {\n    if (number > value) {\n      filterNumbers.push(number);\n    }\n  }\n  return filterNumbers;\n}\n\nconsole.log(filterArray([1, 2, 3, 4, 5], 3));\n\n// ________________________________________\n\nfunction getCommonElements(array1, array2) {\n  let array3 = [];\n  for (let number of array1) {\n    if (array2.includes(number)) {\n      array3.push(number);\n    }\n  }\n\n  return array3;\n}\n\nconsole.log(getCommonElements([1, 2, 3], [2, 1, 17, 19]));\n\n// // _______________________________________-\n// function calculateTotalPrice(order) {\n//   let total = 0;\n\n//   for (const number of order) {\n//     total += number;\n//   }\n\n//   return total;\n// }\n\n// console.log(calculateTotalPrice([12, 85, 37, 4]));\n\n// _________________________________________-\n\nfunction getEvenNumbers(start, end) {\n  // const numbers = [3, 4, 5, 6, 7, 8, 9, 10, 11];\n  const numbers = [];\n  const array = [];\n\n  let number;\n  numbers[0] = start;\n\n  for (i = start; i <= end - 1; i += 1) {\n    number = numbers.push((start += 1));\n  }\n\n  console.log(numbers);\n\n  for (let i = 0; i <= numbers.length; i += 1) {\n    if (numbers[i] % 2 === 0) {\n      array.push(numbers[i]);\n    }\n  }\n  return array;\n}\n\nconsole.log(getEvenNumbers(3, 11));\n\n// __________________________________\n\nfunction includes(array, value) {\n  let message;\n\n  for (let number of array) {\n    // number === value ? \"true\" : \"false\";\n    if (number === value) {\n      message = 'true';\n      return message;\n    }\n    message = 'false';\n  }\n  return message;\n}\n\nconsole.log(includes([1, 2, 3, 4, 5], 3));\nconsole.log(includes([('apple', 'plum', 'pear', 'orange')], 'plum'));\nconsole.log(\n  includes(['Earth', 'Mars', 'Venus', 'Jupiter', 'Saturn'], 'Uranus')\n);\nconsole.log(\n  includes(['Earth', 'Mars', 'Venus', 'Jupiter', 'Saturn'], 'Jupiter')\n);\n\n// for (let i = 0; i <= array.length; i += 1) {\n//   const number = array[i];\n//   if (number === value) {\n//     // return number;\n//   }\n//   return false;\n// }\n\n// // _________________________________________\nconst apartment = {\n  imgUrl: 'https://via.placeholder.com/640x480',\n  descr: 'Spacious apartment in the city center',\n  rating: 4.7,\n  price: 5000,\n  tags: ['premium', 'promoted', 'top', 'trusted'],\n  owner: {\n    name: 'Henry Sibola',\n    phone: '982-126-1588',\n    email: 'henry.carter@aptmail.com',\n  },\n};\n\n// Change code below this line\n// apartment.area = 60;\n// apartment.rooms = 3;\n// apartment.location = { country: \"Jamaica\", city: \"Kingston\" };\n\n// const apartment = {\n//   descr: \"Spacious apartment in the city center\",\n//   rating: 4,\n//   price: 2153,\n// };\n// const keys = [];\n// const values = [];\n// // Change code below this line\n\n// for (const key in apartment) {\n//   keys.push(key);\n//   values.push(apartment[key]);\n// }\n// console.log(values);\n// console.log(keys);\n\nfunction countProps(object) {\n  let propCount = 0;\n  let props = [];\n\n  for (const prop in object) {\n    if (object.hasOwnProperty(prop)) {\n      // console.log(prop);\n      props.push(prop);\n      // propCount += Number(prop);\n      // keys.push(key);\n      // values.push(apartment[key]);\n    }\n  }\n  // console.log(props);\n  propCount = props.length;\n\n  return propCount;\n}\n\nconsole.log(countProps({}));\nconsole.log(countProps({ name: 'Mango', age: 2 }));\nconsole.log(countProps({ mail: 'poly@mail.com', isOnline: true, score: 500 }));\n\nfunction countTotalSalary(salaries) {\n  let totalSalary = 0;\n\n  const values = Object.values(salaries);\n  for (let value of values) {\n    totalSalary += value;\n  }\n  return totalSalary;\n}\n\nconsole.log(countTotalSalary({ mango: 100, poly: 150, alfred: 80 }));\n\n// _______________________________________________\n\nconst products = [\n  { name: 'Radar', price: 1300, quantity: 4 },\n  { name: 'Scanner', price: 2700, quantity: 3 },\n  { name: 'Droid', price: 400, quantity: 7 },\n  { name: 'Grip', price: 1200, quantity: 9 },\n];\n\nfunction getProductPrice(productName) {\n  let price;\n  for (let product of products) {\n    if (productName === product.name) {\n      price = product.price;\n      break;\n    }\n    if (productName !== product.name) {\n      price = null;\n    }\n  }\n  return price;\n}\n\nconsole.log(getProductPrice('Radar'));\nconsole.log(getProductPrice('Engine'));\n\n// const products = [\n//   { name: \"Radar\", price: 1300, quantity: 4 },\n//   { name: \"Scanner\", price: 2700, quantity: 3 },\n//   { name: \"Droid\", price: 400, quantity: 7 },\n//   { name: \"Grip\", price: 1200, quantity: 9 },\n// ];\n\nfunction getAllPropValues(propName) {\n  // Change code below this line\n  let props = [];\n  for (let product of products) {\n    if (propName === 'name') {\n      props.push(product.name);\n    }\n    if (propName === 'price') {\n      props.push(product.price);\n    }\n    if (propName === 'quantity') {\n      props.push(product.quantity);\n    }\n  }\n\n  return props;\n  // Change code above this line\n}\n\nconsole.log(getAllPropValues('name'));\n\nfunction calculateTotalPrice(productName) {\n  // Change code below this line\n  let total;\n  for (let product of products) {\n    // console.log(product);\n    // console.log(product.price);\n    // console.log(product.quantity);\n    // console.log(product.price * product.quantity);\n    if (productName === product.name) {\n      total = product.price * product.quantity;\n    }\n  }\n\n  return total;\n  // Change code above this line\n}\n\nconsole.log(calculateTotalPrice('Radar'));\n\n// __________________________________________\n\n// data = {\n//   text: \"Mary\",\n//   category: 4,\n//   priority: 1,\n// };\n\n// const {text: \"Mary\", category: 4, priority: 1,} = data\n\nfunction makeTask(data) {\n  const completed = false;\n  const category = 'General';\n  const priority = 'Normal';\n  // Change code below this line\n  const newObject = {\n    category: category,\n    priority: priority,\n    completed: completed,\n    ...data,\n  };\n\n  return newObject;\n  // Change code above this line\n}\n\nconsole.log(\n  makeTask({\n    category: 'Homemade',\n    priority: 'Low',\n    text: 'Take out the trash',\n  })\n);\n\n// ________________________________\n\nfunction findMatches(array, ...args) {\n  const matches = []; // Don't change this line\n  for (let arg of args) {\n    if (array.includes(arg)) {\n      matches.push(arg);\n    }\n  }\n  // Change code above this line\n  return matches;\n}\n\nconsole.log(findMatches([1, 2, 3, 4, 5], 1, 8, 2, 7));\n\n// ____________________________________________\n// const atTheOldToad = {\n//   potions: [\"Speed potion\", \"Dragon breath\", \"Stone skin\"],\n//   // Change code below this line\n//   getPotions() {\n//     return this.potions;\n//   },\n//   // Change code above this line\n// };\n\n// console.log(atTheOldToad.getPotions());\n\n// _____________________________________\n// const atTheOldToad = {\n//   potions: [\"Speed potion\", \"Dragon breath\", \"Stone skin\"],\n//   removePotion(potionName) {\n//     const IndexOf = this.potions.indexOf(potionName);\n//     return this.potions.splice(IndexOf, 1);\n\n//   },\n// };\n\n// console.log(atTheOldToad.removePotion(\"Dragon breath\"));\n// console.log(atTheOldToad.removePotion(\"Speed potion\"));\n\nconst atTheOldToad = {\n  potions: [\n    { name: 'Speed potion', price: 460 },\n    { name: 'Dragon breath', price: 780 },\n    { name: 'Stone skin', price: 520 },\n  ],\n\n  getPotions() {\n    return this.potions;\n  },\n\n  addPotion(newPotion) {\n    for (let potion of this.potions) {\n      // console.log(potion);\n      // console.log(potion.name);\n\n      for (let key in potion) {\n        if (newPotion[key] === potion[key]) {\n          return `Error! Potion ${newPotion.name} is already in your inventory!`;\n        }\n        // return this.potions.push(newPotion);\n      }\n    }\n    return this.potions.push(newPotion);\n  },\n\n  removePotion(potionName) {\n    for (let potion of this.potions) {\n      if (potionName === potion.name) {\n        const potionIndex = this.potions.indexOf(potion);\n        this.potions.splice(potionIndex, 1);\n        return this.potions;\n      }\n    }\n    return `Potion ${potionName} is not in inventory!`;\n  },\n\n  updatePotionName(oldName, newName) {\n    console.log(this.potions);\n    for (let potion of this.potions) {\n      console.log(potion);\n      if (potion.name === oldName) {\n        potion.name = newName;\n        return this.potions;\n      }\n    }\n    return `Potion ${oldName} is not in inventory!`;\n  },\n};\n\nconsole.log(atTheOldToad.getPotions());\nconsole.log(atTheOldToad.addPotion({ name: 'Invisibility', price: 620 }));\nconsole.log(atTheOldToad.addPotion({ name: 'Speed potion', price: 460 }));\nconsole.log(atTheOldToad.addPotion({ name: 'Power potion', price: 270 }));\nconsole.log(atTheOldToad.addPotion({ name: 'Dragon breath', price: 700 }));\nconsole.log(atTheOldToad.addPotion({ name: 'Stone skin', price: 240 }));\nconsole.log(atTheOldToad.addPotion({ name: 'Dragon breath', price: 700 }));\nconsole.log(atTheOldToad.removePotion('Dragon breath'));\nconsole.log(atTheOldToad.removePotion('Speed potion'));\nconsole.log(atTheOldToad.updatePotionName('Dragon breath', 'Polymorth'));\nconsole.log(\n  atTheOldToad.updatePotionName('Stone skin', 'Invulnerability potion')\n);\n\nfunction makePizza(pizzaName, callback) {\n  console.log(`Pizza ${pizzaName} is being prepared, please wait...`);\n  callback(pizzaName);\n}\n\nmakePizza('Royal Grand', function deliverPizza(pizzaName) {\n  console.log(`Delivering pizza ${pizzaName}.`);\n});\n// Change code below this line\n\nmakePizza('Ultracheese', function eatPizza(pizzaName) {\n  console.log(`Eating pizza ${pizzaName}`);\n});\n\nconst pizzaPalace = {\n  pizzas: ['Ultracheese', 'Smoked', 'Four meats'],\n  order(pizzaName, onSuccess, onError) {\n    if (this.pizzas.includes(pizzaName)) {\n      return onSuccess(pizzaName);\n    }\n    const error = `There is no pizza with a name ${pizzaName} in the assortment.`;\n    return onError(error);\n  },\n};\n// Change code above this line\n\n// Callback for onSuccess\nfunction makePizza(pizzaName) {\n  return `Your order is accepted. Cooking pizza ${pizzaName}.`;\n}\n\n// Callback for onError\nfunction onOrderError(error) {\n  return `Error! ${error}`;\n}\n\n// Method calls with callbacks\npizzaPalace.order('Smoked', makePizza, onOrderError);\npizzaPalace.order('Four meats', makePizza, onOrderError);\npizzaPalace.order('Big Mike', makePizza, onOrderError);\npizzaPalace.order('Vienna', makePizza, onOrderError);\nconsole.log(pizzaPalace.order('Smoked', makePizza, onOrderError));\nconsole.log(pizzaPalace.order('Four meats', makePizza, onOrderError));\nconsole.log(pizzaPalace.order('Big Mike', makePizza, onOrderError));\nconsole.log(pizzaPalace.order('Vienna', makePizza, onOrderError));\n\nconst calculateTotalPrice1 = orderedItems => {\n  let totalPrice = 0;\n  orderedItems.forEach(item => {\n    totalPrice += item;\n  });\n  return totalPrice;\n};\n\n// // console.log(calculateTotalPrice1([412, 371, 94, 63, 176]));\n\n// // const filterArray = (numbers, value) => {\n// //   const filteredNumbers = [];\n\n// //   numbers.forEach((number) => {\n// //     if (number > value) {\n// //       filteredNumbers.push(number);\n// //     }\n// //   });\n\n// //   return filteredNumbers;\n// // };\n\n// // const getCommonElements = (firstArray, secondArray) => {\n// //   const commonElements = [];\n\n// //   firstArray.forEach((element) => {\n// //     if (secondArray.includes(element)) {\n// //       commonElements.push(element);\n// //     }\n// //   });\n\n// //   return commonElements;\n// // };\n\n// function changeEven(numbers, value) {\n//   // Change code below this line\n//   // for (let i = 0; i < numbers.length; i += 1) {\n//   //   if (numbers[i] % 2 === 0) {\n//   //     numbers[i] = numbers[i] + value;\n//   //   }\n//   // }\n//   const newArray = [];\n\n//   numbers.forEach((number) => {\n//     if (number % 2 === 0) {\n//       number += value;\n//       newArray.push(number);\n//       return number;\n//     }\n//     if (number % 2 !== 0) {\n//       newArray.push(number);\n//     }\n//   });\n//   // Change code above this line\n//   return newArray;\n// }\n\n// console.log(changeEven([44, 13, 81, 92, 36, 54], 100));\n// console.log(\n//   changeEven(\n//     [9, 24, 9, 22, 8, 22, 23, 16, 12, 14, 23, 15, 19, 18, 11, 20, 18],\n//     17\n//   )\n// );\n\n// const planets = [\"Earth\", \"Mars\", \"Venus\", \"Jupiter\"];\n// // Change code below this line\n// const planetsLengths = planets.map((planet) => {\n//   return planet.length;\n// });\n\n// console.log(planetsLengths);\n\n// const getUserNames = (users) => {\n//   return users.map((user) => {\n//     return user.name;\n//   });\n// };\n\n// const getUserEmails = (users) => {\n//   return users.map((user) => {\n//     return user.email;\n//   });\n// };\n\n// // const books = [\n// //   {\n// //     title: \"The Last Kingdom\",\n// //     author: \"Bernard Cornwell\",\n// //     genres: [\"adventure\", \"history\"],\n// //   },\n// //   {\n// //     title: \"Beside Still Waters\",\n// //     author: \"Robert Sheckley\",\n// //     genres: [\"fiction\", \"mysticism\"],\n// //   },\n// //   {\n// //     title: \"Redder Than Blood\",\n// //     author: \"Tanith Lee\",\n// //     genres: [\"horror\", \"mysticism\", \"adventure\"],\n// //   },\n// // ];\n// // // Change code below this line\n// // const allGenres = books.flatMap((book) => book.genres);\n// // const uniqueGenres = allGenres.filter(\n// //   (genre, index, allGenres) => allGenres.indexOf(genre) === index\n// // );\n\n// // const books = [\n// //   {\n// //     title: \"The Last Kingdom\",\n// //     author: \"Bernard Cornwell\",\n// //     rating: 8.38,\n// //   },\n// //   {\n// //     title: \"Beside Still Waters\",\n// //     author: \"Robert Sheckley\",\n// //     rating: 8.51,\n// //   },\n// //   {\n// //     title: \"The Dream of a Ridiculous Man\",\n// //     author: \"Fyodor Dostoevsky\",\n// //     rating: 7.75,\n// //   },\n// //   { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n// //   { title: \"Enemy of God\", author: \"Bernard Cornwell\", rating: 8.67 },\n// // ];\n\n// // const MIN_RATING = 8;\n// // const AUTHOR = \"Bernard Cornwell\";\n// // // Change code below this line\n\n// // const topRatedBooks = books.filter((book) => book.rating >= MIN_RATING);\n\n// // const booksByAuthor = books.filter((book) => book.author === AUTHOR);\n\n// // console.log(topRatedBooks);\n// // console.log(booksByAuthor);\n\n// const users = [\n//   {\n//     name: \"Moore Hensley\",\n//     email: \"moorehensley@indexia.com\",\n//     eyeColor: \"blue\",\n//     friends: [\"Sharron Pace\"],\n//     isActive: false,\n//     balance: 2811,\n//     gender: \"male\",\n//     age: 37,\n//   },\n//   {\n//     name: \"Sharlene Bush\",\n//     email: \"sharlenebush@tubesys.com\",\n//     eyeColor: \"blue\",\n//     friends: [\"Briana Decker\", \"Sharron Pace\"],\n//     isActive: true,\n//     balance: 3821,\n//     gender: \"female\",\n//     age: 34,\n//   },\n//   {\n//     name: \"Ross Vazquez\",\n//     email: \"rossvazquez@xinware.com\",\n//     eyeColor: \"green\",\n//     friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//     isActive: false,\n//     balance: 3793,\n//     gender: \"male\",\n//     age: 24,\n//   },\n//   {\n//     name: \"Elma Head\",\n//     email: \"elmahead@omatom.com\",\n//     eyeColor: \"green\",\n//     friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//     isActive: true,\n//     balance: 2278,\n//     gender: \"female\",\n//     age: 21,\n//   },\n//   {\n//     name: \"Carey Barr\",\n//     email: \"careybarr@nurali.com\",\n//     eyeColor: \"blue\",\n//     friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//     isActive: true,\n//     balance: 3951,\n//     gender: \"male\",\n//     age: 27,\n//   },\n//   {\n//     name: \"Blackburn Dotson\",\n//     email: \"blackburndotson@furnigeer.com\",\n//     eyeColor: \"brown\",\n//     friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//     isActive: false,\n//     balance: 1498,\n//     gender: \"male\",\n//     age: 38,\n//   },\n//   {\n//     name: \"Sheree Anthony\",\n//     email: \"shereeanthony@kog.com\",\n//     eyeColor: \"brown\",\n//     friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//     isActive: true,\n//     balance: 2764,\n//     gender: \"female\",\n//     age: 39,\n//   },\n// ];\n\n// const getFriends = (users) => {\n//   const allFriends = users.flatMap((user) => user.friends);\n//   const uniqueFriends = allFriends.filter(\n//     (friend, index, allFriends) => allFriends.indexOf(friend) === index\n//   );\n//   return uniqueFriends;\n// };\n\n// console.log(getFriends);\n\n// const getActiveUsers = (users) => {\n//   return users.filter((user) => user.isActive === true);\n// };\n\n// const getInactiveUsers = (users) => {\n//   return users.filter((user) => user.isActive === false);\n// };\n\n// const books = [\n//   {\n//     title: \"The Last Kingdom\",\n//     author: \"Bernard Cornwell\",\n//     rating: 8.38,\n//   },\n//   {\n//     title: \"Beside Still Waters\",\n//     author: \"Robert Sheckley\",\n//     rating: 8.51,\n//   },\n//   {\n//     title: \"The Dream of a Ridiculous Man\",\n//     author: \"Fyodor Dostoevsky\",\n//     rating: 7.75,\n//   },\n//   { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n// ];\n// const BOOK_TITLE = \"The Dream of a Ridiculous Man\";\n// const AUTHOR = \"Robert Sheckley\";\n// // Change code below this line\n\n// const bookWithTitle = books.find((book) => book.title === BOOK_TITLE);\n// const bookByAuthor = books.find((book) => book.author === AUTHOR);\n\n// const getUserWithEmail = (users, email) => {\n//   return users.find((user) => user.email === email);\n// };\n\n// const isEveryUserActive = (users) => {\n//   return users.every((user) => user.isActive === true);\n// };\n\n// const players = [\n//   { name: \"Mango\", playtime: 1270, gamesPlayed: 4 },\n//   { name: \"Poly\", playtime: 469, gamesPlayed: 2 },\n//   { name: \"Ajax\", playtime: 690, gamesPlayed: 3 },\n//   { name: \"Kiwi\", playtime: 241, gamesPlayed: 1 },\n// ];\n// // Change code below this line\n\n// const totalAveragePlaytimePerGame = players.reduce((total, player) => {\n//   return total + player.playtime / player.gamesPlayed;\n// }, 0);\n\n// const calculateTotalBalance = (users) => {\n//   return users.reduce((total, user) => {\n//     return total + user.balance;\n//   }, 0);\n// };\n\n// const getTotalFriendCount = (users) => {\n//   return users.reduce((totalFriends, user) => {\n//     return totalFriends + user.friends.length;\n//   }, 0);\n// };\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n// const authors = [\n//   \"Tanith Lee\",\n//   \"Bernard Cornwell\",\n//   \"Robert Sheckley\",\n//   \"Fyodor Dostoevsky\",\n// ];\n// Change code below this line\n\n// const ascendingReleaseDates = [...releaseDates].sort();\n\n// const alphabeticalAuthors = [...authors].sort();\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n// // Change code below this line\n\n// const ascendingReleaseDates = [...releaseDates].sort((a, b) => a - b);\n\n// const descendingReleaseDates = [...releaseDates].sort((a, b) => b - a);\n\nconst users = [\n  {\n    name: 'Moore Hensley',\n    email: 'moorehensley@indexia.com',\n    eyeColor: 'blue',\n    friends: ['Sharron Pace'],\n    isActive: false,\n    balance: 2811,\n    gender: 'male',\n  },\n  {\n    name: 'Sharlene Bush',\n    email: 'sharlenebush@tubesys.com',\n    eyeColor: 'blue',\n    friends: ['Briana Decker', 'Sharron Pace'],\n    isActive: true,\n    balance: 3821,\n    gender: 'female',\n  },\n  {\n    name: 'Ross Vazquez',\n    email: 'rossvazquez@xinware.com',\n    eyeColor: 'green',\n    friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],\n    isActive: false,\n    balance: 3793,\n    gender: 'male',\n  },\n  {\n    name: 'Elma Head',\n    email: 'elmahead@omatom.com',\n    eyeColor: 'green',\n    friends: ['Goldie Gentry', 'Aisha Tran'],\n    isActive: true,\n    balance: 2278,\n    gender: 'female',\n  },\n  {\n    name: 'Carey Barr',\n    email: 'careybarr@nurali.com',\n    eyeColor: 'blue',\n    friends: ['Jordan Sampson', 'Eddie Strong'],\n    isActive: true,\n    balance: 3951,\n    gender: 'male',\n  },\n  {\n    name: 'Blackburn Dotson',\n    email: 'blackburndotson@furnigeer.com',\n    eyeColor: 'brown',\n    friends: ['Jacklyn Lucas', 'Linda Chapman'],\n    isActive: false,\n    balance: 1498,\n    gender: 'male',\n  },\n  {\n    name: 'Sheree Anthony',\n    email: 'shereeanthony@kog.com',\n    eyeColor: 'brown',\n    friends: ['Goldie Gentry', 'Briana Decker'],\n    isActive: true,\n    balance: 2764,\n    gender: 'female',\n  },\n];\n\nconst sortByDescendingFriendCount = users => {\n  return [...users].sort(\n    (firstUser, secondUser) =>\n      firstUser.friends.length - secondUser.friends.length\n  );\n};\nconsole.log(sortByDescendingFriendCount(users));\n\nconst books = [\n  {\n    title: 'The Last Kingdom',\n    author: 'Bernard Cornwell',\n    rating: 8.38,\n  },\n  {\n    title: 'Beside Still Waters',\n    author: 'Robert Sheckley',\n    rating: 8.51,\n  },\n  {\n    title: 'The Dream of a Ridiculous Man',\n    author: 'Fyodor Dostoevsky',\n    rating: 7.75,\n  },\n  { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },\n  {\n    title: 'The Dreams in the Witch House',\n    author: 'Howard Lovecraft',\n    rating: 8.67,\n  },\n];\nconst MIN_BOOK_RATING = 8;\n// Change code below this line\n\nconst names = [...books]\n  .filter(book => book.rating > MIN_BOOK_RATING)\n  .sort((firstBook, secondBook) =>\n    firstBook.author.localeCompare(secondBook.author)\n  )\n  .map(book => book.author);\n\nconsole.log(names);\n\nconst getNamesSortedByFriendCount = users => {\n  return [...users]\n    .sort(\n      (firstUser, secondUser) =>\n        firstUser.friends.length - secondUser.friends.length\n    )\n    .map(user => user.name);\n};\nconsole.log(getNamesSortedByFriendCount(users));\n\nconst getSortedFriends = users => {\n  const allFriends = [...users].flatMap(user => user.friends);\n\n  const uniqueFriends = allFriends.filter(\n    (friend, index, allFriends) => allFriends.indexOf(friend) === index\n  );\n\n  uniqueFriends.sort((firstFriend, secondFriend) =>\n    firstFriend.localeCompare(secondFriend)\n  );\n\n  return uniqueFriends;\n};\n\nconsole.log(getSortedFriends(users));\n\nconst getTotalBalanceByGender = (users, gender) => {\n  const usersGender = users.filter(\n    (user, index, users) => user.gender === gender\n  );\n  return usersGender.reduce((total, user) => {\n    return total + user.balance;\n  }, 0);\n};\nconsole.log(getTotalBalanceByGender(users, 'male'));\n\n// _________ 5 module_____________\n\n// const pizzaPalace = {\n//   pizzas: [\"Supercheese\", \"Smoked\", \"Four meats\"],\n//   // Change code below this line\n//   checkPizza(pizzaName) {\n//     return this.pizzas.includes(pizzaName);\n//   },\n//   order(pizzaName) {\n//     const isPizzaAvailable = this.checkPizza(pizzaName);\n\n//     if (!isPizzaAvailable) {\n//       return `Sorry, there is no pizza named «${pizzaName}»`;\n//     }\n\n//     return `Order accepted, preparing «${pizzaName}» pizza`;\n//   },\n//   // Change code above this line\n// };\n\nconst customer = {\n  username: 'Mango',\n  balance: 24000,\n  discount: 0.1,\n  orders: ['Burger', 'Pizza', 'Salad'],\n  // Change code below this line\n  getBalance() {\n    return this.balance;\n  },\n  getDiscount() {\n    return this.discount;\n  },\n  setDiscount(value) {\n    this.discount = value;\n  },\n  getOrders() {\n    return this.orders;\n  },\n  addOrder(cost, order) {\n    this.balance -= cost - cost * this.discount;\n    this.orders.push(order);\n  },\n  // Change code above this line\n};\n\ncustomer.setDiscount(0.15);\nconsole.log(customer.getDiscount()); // 0.15\ncustomer.addOrder(5000, 'Steak');\nconsole.log(customer.getBalance()); // 19750\nconsole.log(customer.getOrders()); // [\"Burger\", \"Pizza\", \"Salad\", \"Steak\"]\n\nconst historyService = {\n  orders: [\n    { email: 'jacob@hotmail.com', dish: 'Burrito' },\n    { email: 'solomon@topmail.net', dish: 'Burger' },\n    { email: 'artemis@coldmail.net', dish: 'Pizza' },\n    { email: 'solomon@topmail.net', dish: 'Apple pie' },\n    { email: 'jacob@hotmail.com', dish: 'Taco' },\n  ],\n  // Change code below this line\n  getOrdersLog() {\n    return this.orders\n      .map(order => `email: ${order.email} dish: ${order.dish}`)\n      .join(' - ');\n  },\n  getEmails() {\n    const emails = this.orders.map(order => order.email);\n    const uniqueEmails = new Set(emails);\n    return [...uniqueEmails];\n  },\n  getOrdersByEmail(email) {\n    return this.orders.filter(order => order.email === email);\n  },\n  // Change code above this line\n};\n\nconst parent = {\n  name: 'Stacey',\n  surname: 'Moore',\n  age: 54,\n  heritage: 'Irish',\n};\n// Change code below this line\nconst child = Object.create(parent);\n// const child = { name: \"Jason\", age: 27, __proto__: parent };\n\n// Change code above this line\nchild.name = 'Jason';\nchild.age = 27;\n\nconst ancestor = {\n  name: 'Paul',\n  age: 83,\n  surname: 'Dawson',\n  heritage: 'Irish',\n};\n// Change code below this line\n\n// const parent = Object.create(ancestor);\n// parent.name = \"Stacey\";\n// parent.surname = \"Moore\";\n// parent.age = 54;\n\n// const child = Object.create(parent);\n// child.name = \"Jason\";\n// child.age = 27;\n\n// Change code above this line\n\n// class Car {\n//   // Change code below this line\n//   constructor(brand, model, price) {\n//     this.brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n//   // Change code above this line\n// }\n\n// console.log(new Car(\"Audi\", \"Q3\", 36000));\n// console.log(new Car(\"BMW\", \"X1\", 38900));\n\n//  деструктуризаціяю Патерн Об єкт параметрів\n\n// class Car {\n//   // Change code below this line\n//   constructor({ brand, model, price }) {\n//     this.brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n//   // Change code above this line\n// }\n\n// console.log(new Car({ brand: \"BMW\", model: \"X5\", price: 58900 }));\n\n// class Car {\n//   constructor({ brand, model, price }) {\n//     this.brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n//   // Change code below this line\n//   getPrice() {\n//     return this.price;\n//   }\n//   changePrice(newPrice) {\n//     return (this.price = newPrice);\n//   }\n//   // Change code above this line\n// }\n\nclass Storage {\n  constructor(items) {\n    this.items = items;\n  }\n\n  getItems() {\n    return this.items;\n  }\n  addItem(newItem) {\n    return this.items.push(newItem);\n  }\n  removeItem(itemToRemove) {\n    const indexOf = this.items.indexOf(itemToRemove);\n\n    return this.items.splice(indexOf, 1);\n  }\n}\n\n// Change code above this line\nconst storage = new Storage(['Nanitoids', 'Prolonger', 'Antigravitator']);\nconsole.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\"]\nstorage.addItem('Droid');\nconsole.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\", \"Droid\"]\nstorage.removeItem('Prolonger');\nconsole.log(storage.getItems()); // [\"Nanitoids\", \"Antigravitator\", \"Droid\"]\n\nclass StringBuilder {\n  constructor(initialValue) {\n    this.value = initialValue;\n  }\n  getValue() {\n    return this.value;\n  }\n\n  padEnd(str) {\n    return (this.value = this.value + str);\n  }\n\n  padStart(str) {\n    return (this.value = str + this.value);\n  }\n  padBoth(str) {\n    this.padEnd(str);\n    this.padStart(str);\n    // return (this.value = str + this.value + str);\n  }\n}\n\nconsole.dir(StringBuilder);\n// Change code above this line\nconst builder = new StringBuilder('.');\nconsole.log(builder.getValue()); // \".\"\n\nbuilder.padStart('^');\nconsole.log(builder.getValue()); // \"^.\"\nbuilder.padEnd('^');\nconsole.log(builder.getValue()); // \"^.^\"\nbuilder.padBoth('=');\nconsole.log(builder.getValue()); // \"=^.^=\"\n\n// class Car {\n//   #brand;\n//   constructor({ brand, model, price }) {\n//     this.#brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n\n//   getBrand() {\n//     return this.#brand;\n//   }\n\n//   changeBrand(newBrand) {\n//     this.#brand = newBrand;\n//   }\n// }\n// console.log(new Car({ brand: \"bmw\", model: \"X5\", price: 58900 }));\n\nclass Car {\n  // Change code below this line\n  static MAX_PRICE = 50000;\n\n  #price;\n\n  constructor({ price }) {\n    this.#price = price;\n  }\n\n  get price() {\n    return this.#price;\n  }\n\n  set price(newPrice) {\n    this.#price = newPrice;\n    if (this.#price >= Car.MAX_PRICE) {\n      return (this.#price = 49000);\n    }\n    return (this.#price = newPrice);\n  }\n}\nconsole.log(Car.MAX_PRICE);\n\nconst audi = new Car({ price: 35000 });\nconsole.log(audi.price); // 35000\n\naudi.price = 49000;\nconsole.log(audi.price); // 49000\n\naudi.price = 51000;\nconsole.log(audi.price); // 49000\n\n// class Car {\n//   static #MAX_PRICE = 50000;\n//   // Change code below this line\n//   static checkPrice(price) {\n//     if (price > this.#MAX_PRICE) {\n//       return \"Error! Price exceeds the maximum\";\n//     }\n\n//     return \"Success! Price is within acceptable limits\";\n//   }\n//   // Change code above this line\n//   constructor({ price }) {\n//     this.price = price;\n//   }\n// }\n\n// const audi = new Car({ price: 36000 });\n// const bmw = new Car({ price: 64000 });\n\n// console.log(Car.checkPrice(audi.price)); // \"Success! Price is within acceptable limits\"\n// console.log(Car.checkPrice(bmw.price)); // \"Error! Price exceeds the maximum\"\n\n// class User {\n//   constructor(email) {\n//     this.email = email;\n//   }\n\n//   get email() {\n//     return this.email;\n//   }\n\n//   set email(newEmail) {\n//     this.email = newEmail;\n//   }\n// }\n// // Change code below this line\n\n// class Admin extends User {\n//   static AccessLevel = {\n//     BASIC: \"basic\",\n//     SUPERUSER: \"superuser\",\n//   };\n// }\n\n// class User {\n//   email;\n\n//   constructor(email) {\n//     this.email = email;\n//   }\n\n//   get email() {\n//     return this.email;\n//   }\n\n//   set email(newEmail) {\n//     this.email = newEmail;\n//   }\n// }\n\n// class Admin extends User {\n//   // Change code below this line\n\n//   static AccessLevel = {\n//     BASIC: \"basic\",\n//     SUPERUSER: \"superuser\",\n//   };\n\n//   constructor({ email, accessLevel }) {\n//     super(email);\n//   }\n//   // Change code above this line\n// }\n\n// const mango = new Admin({\n//   email: \"mango@mail.com\",\n//   accessLevel: Admin.AccessLevel.SUPERUSER,\n// });\n\n// console.log(mango.email); // \"mango@mail.com\"\n// console.log(mango.accessLevel); // \"superuser\"\n\nclass User {\n  email;\n\n  constructor(email) {\n    this.email = email;\n  }\n\n  get email() {\n    return this.email;\n  }\n\n  set email(newEmail) {\n    this.email = newEmail;\n  }\n}\nclass Admin extends User {\n  // Change code below this line\n\n  static AccessLevel = {\n    BASIC: 'basic',\n    SUPERUSER: 'superuser',\n  };\n\n  blacklist(email) {\n    this.blacklistedEmails.push(email);\n  }\n\n  isBlacklisted(email) {\n    if (this.blacklistedEmails.includes(email)) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor({ email, accessLevel }) {\n    super(email);\n    this.accessLevel = accessLevel;\n    this.blacklistedEmails = [];\n  }\n\n  // Change code above this line\n}\n\nconst mango = new Admin({\n  email: 'mango@mail.com',\n  accessLevel: Admin.AccessLevel.SUPERUSER,\n});\n\nconsole.log(mango.email); // \"mango@mail.com\"\nconsole.log(mango.accessLevel); // \"superuser\"\n\nmango.blacklist('poly@mail.com');\nconsole.log(mango.blacklistedEmails); // [\"poly@mail.com\"]\nconsole.log(mango.isBlacklisted('mango@mail.com')); // false\nconsole.log(mango.isBlacklisted('poly@mail.com')); // true\n"],"names":["Object","defineProperty","module","exports","value","default","receiver","privateMap","action","has","TypeError","get","descriptor","call","obj","privateCollection","set","writable","$e13576b86460cc50$exports","$e13576b86460cc50$var$_classExtractFieldDescriptor","$e13576b86460cc50$var$_classApplyDescriptorGet","$e13576b86460cc50$var$_interopRequireDefault","parcelRequire","__esModule","$bb98491953509995$exports","$bb98491953509995$var$_checkPrivateRedeclaration","$c36c16f840444775$exports","$c36c16f840444775$var$_classExtractFieldDescriptor","$c36c16f840444775$var$_classApplyDescriptorSet","$c36c16f840444775$var$_interopRequireDefault","$da4b248c00322402$exports","key","enumerable","configurable","console","log","$1f0dc3b9307be026$var$pricee","$1f0dc3b9307be026$var$message","i4","$1f0dc3b9307be026$var$totalSalary","i1","salary","Math","round","random","i2","$1f0dc3b9307be026$var$friends","table","$1f0dc3b9307be026$var$lastIndex","length","i","$1f0dc3b9307be026$var$makeArray","firstArray","secondArray","maxLength","allArray","concat","allArray1","slice","split","join","toLowerCase","title1","result","$1f0dc3b9307be026$var$slugify","$1f0dc3b9307be026$var$clients","i3","$1f0dc3b9307be026$var$includes","array5","message3","number","string","words","biggestWord","word","$1f0dc3b9307be026$var$findLongestWord","min1","max1","numbers","push","$1f0dc3b9307be026$var$createArrayOfNumbers","filterNumbers","$1f0dc3b9307be026$var$filterArray","array1","array2","array3","includes","$1f0dc3b9307be026$var$getCommonElements","start","end","array4","i5","$1f0dc3b9307be026$var$getEvenNumbers","$1f0dc3b9307be026$var$countProps","object","propCount","props","prop","hasOwnProperty","name","age","mail","isOnline","score","salaries","totalSalary1","values","$1f0dc3b9307be026$var$countTotalSalary","mango","poly","alfred","$1f0dc3b9307be026$var$products","price","quantity","$1f0dc3b9307be026$var$getProductPrice","productName","product","data","propName","$1f0dc3b9307be026$var$getAllPropValues","total1","$1f0dc3b9307be026$var$calculateTotalPrice","category","priority","text","completed","array6","args","matches","arg","$1f0dc3b9307be026$var$findMatches","$1f0dc3b9307be026$var$atTheOldToad","potions","getPotions","this","addPotion","newPotion","potion","removePotion","potionName","potionIndex","indexOf","splice","updatePotionName","oldName","newName","$1f0dc3b9307be026$var$makePizza","pizzaName","callback","$1f0dc3b9307be026$var$pizzaPalace","pizzas","order","onSuccess","onError","$1f0dc3b9307be026$var$onOrderError","error","$1f0dc3b9307be026$var$users","email","eyeColor","friends","isActive","balance","gender","users1","sort","firstUser","secondUser","$1f0dc3b9307be026$var$names","title","author","rating","filter","book","firstBook","secondBook","localeCompare","map","users2","user","users3","uniqueFriends","flatMap","friend","index","allFriends","firstFriend","secondFriend","$1f0dc3b9307be026$var$getSortedFriends","users","reduce","total2","$1f0dc3b9307be026$var$customer","username","discount","orders","getBalance","getDiscount","setDiscount","getOrders","addOrder","cost","$1f0dc3b9307be026$var$child","create","surname","heritage","$1f0dc3b9307be026$var$storage","getItems","items","addItem","newItem","removeItem","itemToRemove","constructor","$1f0dc3b9307be026$var$StringBuilder","getValue","padEnd","str","padStart","padBoth","initialValue","dir","$1f0dc3b9307be026$var$builder","$1f0dc3b9307be026$var$_price","WeakMap","$1f0dc3b9307be026$var$Car","$parcel$interopDefault","newPrice","MAX_PRICE","$1f0dc3b9307be026$var$audi","$1f0dc3b9307be026$var$Admin","newEmail","blacklist","blacklistedEmails","isBlacklisted","accessLevel","super","BASIC","SUPERUSER","$1f0dc3b9307be026$var$mango","AccessLevel"],"version":3,"file":"index.780b4e10.js.map"}