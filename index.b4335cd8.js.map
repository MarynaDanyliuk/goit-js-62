{"mappings":"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","sources":["src/index.js"],"sourcesContent":["console.log(\"Hello, Mary!\");\n// ____________________________________;\n\nfunction checkForSpam(message) {\n  let result;\n  // Change code below this line\n  const stopword1 = \"spam\";\n  const stopword2 = \"sale\";\n  message = message.toLowerCase();\n  result = message.includes(stopword1) || message.includes(stopword2);\n\n  // Change code above this line\n  return result;\n}\n\nfunction checkForName(fullName, name) {\n  const result = fullName.includes(name); // Change this line\n  return result;\n}\n\n// function getShippingCost(country) {\n//   let message;\n//   // Change code below this line\n\n//   switch (\n//     country // Change this line\n//   ) {\n//     case \"Australia\":\n//       price = 170;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Germany\":\n//       message = \"Sorry, there is no delivery to your country\";\n//       break;\n//     case \"China\":\n//       price = 100;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Chile\":\n//       price = 250;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Jamaica\":\n//       price = 120;\n//       message = `Shipping to ${country} will cost ${price} credits`;\n//       break;\n//     case \"Sweden\":\n//       message = \"Sorry, there is no delivery to your country\";\n//       break;\n//     default:\n//       message = \"Sorry, there is no delivery to your country\";\n//   }\n//   // Change code above this line\n//   return message;\n// }\n\n// const x = getShippingCost(\"Australia\");\n\n// console.log(x);\n// ____________________________________;\n\nconst stars = 3;\nlet pricee;\n\n// if (stars === 1) {\n//   price = 20;\n// } else if (stars === 2) {\n//   price = 30;\n// } else if (stars === 3) {\n//   price = 50;\n// } else if (stars === 4) {\n//   price = 70;\n// } else if (stars === 5) {\n//   price = 120;\n// } else {\n//   console.log(\"Такого количества звезд нет\");\n// }\n\n// ________________________\n\nswitch (stars) {\n  case 1:\n    pricee = 20;\n    break;\n\n  case 2:\n    pricee = 30;\n    break;\n\n  case 3:\n    pricee = 50;\n    break;\n\n  default:\n    console.log(\"Такого количества звезд нет\");\n}\n\nconsole.log(pricee);\n\n// 1. назначить переменные\n\nconst option = 1;\nlet message = \"\";\n\n// //  2. Записать свитч выбора опции\n\nswitch (option) {\n  case 1:\n    message = \"Вы сможете забрать товар завтра с 12:00 в нашем офисе\";\n    break;\n\n  case 2:\n    message = \"Курьер доставит заказ завтра с 9:00 до 18:00\";\n    break;\n\n  case 3:\n    message = \"Посылка будет отправлена сегодня\";\n    break;\n\n  default:\n    message = \"Вам перезвонит менеджер\";\n}\n\n// // 3. Сделать лог месседж\n\nconsole.log(message);\n\n// // Цыклы. Цыкл for\n\nfor (let i = 10; i < 20; i += 1) {\n  console.log(i);\n}\n\nconsole.log(\"jsdjs\");\n\n// Цикл for\n// Общая сумма зарплаты работникам, которая генерится случайными числами от 500 до 5000\n// Перемненная зп totalSalary, переменная по работникам employees. Принимаем количество работников произвольное - 4 например\n// 1. назначаем переменнные\nconst employees = 4;\nlet totalSalary = 0;\n// // если нет работников тотал салари принимем равным нулю, поскольку эта пременная будет меняться, принимаем ее через let\nconst minSalary = 500;\nconst maxSalary = 5000;\n\nfor (let i = 1; i < 5; i += 1) {\n  const salary = Math.round(\n    Math.random() * (maxSalary - minSalary) + minSalary\n  );\n  console.log(`ЗП работника номер ${i} - ${salary}`);\n\n  totalSalary += salary;\n}\n\nconsole.log(\"totalSalary: \", totalSalary);\n\n// скрипт подсчета суммы всех четных чисел в диапазоне от min до max\nconst min = 6;\nconst max = 13;\nlet total = 0;\n\nfor (let i = min; i <= max; i += 1) {\n  console.log(i);\n  if (i % 2 === 0) {\n    console.log(\"четное: \", i);\n  }\n}\n// _________\n\n// const y = Math.round(Math.random() * 100 + 1); // 1-100\n// let userInput;\n\n// do {\n//   userInput = Number(prompt(\"Enter a number (1-100)\"));\n\n//   if (y > userInput) {\n//     console.log(\"y >\", userInput);\n//   } else if (x < userInput) {\n//     console.log(\"y <\", userInput);\n//   }\n// } while (y !== userInput);\n\n// console.log(\"You won!\");\n\n// ___________________________________\n\n// const result = 10 + 100 - 2 * 5;\n// console.log(result);\n\n// function multiply(a, b) {\n//   a * b;\n// }\n\n// const array = [\"a\", \"b\", \"c\", \"d\", \"e\"];\n// let array = [\"a\", \"b\", \"c\", \"d\", \"e\"];\nconst array = [\"a\", \"b\", \"c\", \"d\", \"e\"];\nconsole.log(array);\n\n// function getExtremeElements(array) {\n//   array.splice(array[1], 3);\n//   return array; // Change code above this line\n// }\n\n// console.log(getExtremeElements(\"a\", \"b\", \"c\", \"d\", \"e\"));\n\n// _____________________________________\n\nconst friends = [\"Andriy\", \"Mary\", \"Misha\", \"Masha\"];\nconsole.table(friends);\nconst lastIndex = friends.length - 1;\n\nfor (i = 0; i <= lastIndex; i += 1) {\n  friends[i] += \"-1\";\n}\nconsole.table(friends);\n\n// _________________________________________\n\nconst title = \"Andriy Mary Misha Masha\";\n\nfunction slugify(title) {\n  let result;\n  result = title.split(\" \").join(\"-\").toLowerCase();\n  return result;\n  // Change code above this line\n}\nconsole.log(title.split(\" \").join(\"-\").toLowerCase());\nconsole.log(slugify(\"Andriy Mary Misha Masha\"));\n\n// _______________________________________________\n\nfunction checkForSpam(message) {\n  let result;\n\n  const stopword1 = \"spam\";\n  const stopword2 = \"sale\";\n  message = message.toLowerCase();\n  result = message.includes(stopword1) || message.includes(stopword2);\n\n  return result;\n}\n\nfunction makeArray(firstArray, secondArray, maxLength) {\n  // Change code below this line\n\n  const allArray = firstArray.concat(secondArray);\n  const allArray1 = allArray.slice(0, maxLength);\n\n  if (allArray.length <= maxLength) {\n    return allArray;\n  }\n  if (allArray.length > maxLength) {\n    return allArray1;\n  }\n  return allArray;\n  // Change code above this line\n}\n\nconsole.log(makeArray([\"Mango\", \"Poly\"], [\"Ajax\", \"Chelsea\"], 3));\nconsole.log(makeArray([\"Earth\", \"Jupiter\"], [\"Neptune\", \"Uranus\", \"Venus\"], 0));\nconsole.log(makeArray([\"Earth\", \"Jupiter\"], [\"Neptune\", \"Uranus\"], 4));\n\n// ________________________________________\n\n// const dogs = [1, 2, 3, 4, 5, 6, 7];\n\n// console.log(dogs.length);\n\n// function calculateTotal(number) {\n//   let total = 0;\n\n//   for (let i = 0; i < dogs.length; i += 1) {\n//     console.log(dogs[i]);\n//     total += dogs[i];\n//   }\n// }\n\n// console.log(calculateTotal(7));\n\nconst clients = [\"Mango\", \"Ajax\", \"Poly\"];\n\nfor (let i = 0; i < clients.length; i += 1) {\n  console.log(clients[i]);\n}\n\n// __________________________\n\nfunction findLongestWord(string) {\n  // Change code below this line\n  const words = string.split(\" \");\n\n  let biggestWord = words[0];\n\n  for (let word of words) {\n    if (word.length > biggestWord.length) {\n      biggestWord = word;\n    }\n  }\n  return biggestWord;\n  // Change code above this line\n}\n\nconsole.log(findLongestWord(\"The quick brown fox jumped over the lazy dog\"));\n\nfunction createArrayOfNumbers(min, max) {\n  const numbers = [];\n\n  let number;\n  numbers[0] = min;\n\n  for (i = min; i <= max - 1; i += 1) {\n    number = numbers.push((min += 1));\n  }\n\n  return numbers;\n}\n\nconsole.log(createArrayOfNumbers(1, 3));\n\n// _________________________________\n\nfunction filterArray(numbers, value) {\n  let filterNumbers = [];\n  for (let number of numbers) {\n    if (number > value) {\n      filterNumbers.push(number);\n    }\n  }\n  return filterNumbers;\n}\n\nconsole.log(filterArray([1, 2, 3, 4, 5], 3));\n\n// ________________________________________\n\nfunction getCommonElements(array1, array2) {\n  let array3 = [];\n  for (let number of array1) {\n    if (array2.includes(number)) {\n      array3.push(number);\n    }\n  }\n\n  return array3;\n}\n\nconsole.log(getCommonElements([1, 2, 3], [2, 1, 17, 19]));\n\n// // _______________________________________-\n// function calculateTotalPrice(order) {\n//   let total = 0;\n\n//   for (const number of order) {\n//     total += number;\n//   }\n\n//   return total;\n// }\n\n// console.log(calculateTotalPrice([12, 85, 37, 4]));\n\n// _________________________________________-\n\nfunction getEvenNumbers(start, end) {\n  // const numbers = [3, 4, 5, 6, 7, 8, 9, 10, 11];\n  const numbers = [];\n  const array = [];\n\n  let number;\n  numbers[0] = start;\n\n  for (i = start; i <= end - 1; i += 1) {\n    number = numbers.push((start += 1));\n  }\n\n  console.log(numbers);\n\n  for (let i = 0; i <= numbers.length; i += 1) {\n    if (numbers[i] % 2 === 0) {\n      array.push(numbers[i]);\n    }\n  }\n  return array;\n}\n\nconsole.log(getEvenNumbers(3, 11));\n\n// __________________________________\n\nfunction includes(array, value) {\n  let message;\n\n  for (let number of array) {\n    // number === value ? \"true\" : \"false\";\n    if (number === value) {\n      message = \"true\";\n      return message;\n    }\n    message = \"false\";\n  }\n  return message;\n}\n\nconsole.log(includes([1, 2, 3, 4, 5], 3));\nconsole.log(includes([(\"apple\", \"plum\", \"pear\", \"orange\")], \"plum\"));\nconsole.log(\n  includes([\"Earth\", \"Mars\", \"Venus\", \"Jupiter\", \"Saturn\"], \"Uranus\")\n);\nconsole.log(\n  includes([\"Earth\", \"Mars\", \"Venus\", \"Jupiter\", \"Saturn\"], \"Jupiter\")\n);\n\n// for (let i = 0; i <= array.length; i += 1) {\n//   const number = array[i];\n//   if (number === value) {\n//     // return number;\n//   }\n//   return false;\n// }\n\n// // _________________________________________\nconst apartment = {\n  imgUrl: \"https://via.placeholder.com/640x480\",\n  descr: \"Spacious apartment in the city center\",\n  rating: 4.7,\n  price: 5000,\n  tags: [\"premium\", \"promoted\", \"top\", \"trusted\"],\n  owner: {\n    name: \"Henry Sibola\",\n    phone: \"982-126-1588\",\n    email: \"henry.carter@aptmail.com\",\n  },\n};\n\n// Change code below this line\n// apartment.area = 60;\n// apartment.rooms = 3;\n// apartment.location = { country: \"Jamaica\", city: \"Kingston\" };\n\n// const apartment = {\n//   descr: \"Spacious apartment in the city center\",\n//   rating: 4,\n//   price: 2153,\n// };\n// const keys = [];\n// const values = [];\n// // Change code below this line\n\n// for (const key in apartment) {\n//   keys.push(key);\n//   values.push(apartment[key]);\n// }\n// console.log(values);\n// console.log(keys);\n\nfunction countProps(object) {\n  let propCount = 0;\n  let props = [];\n\n  for (const prop in object) {\n    if (object.hasOwnProperty(prop)) {\n      // console.log(prop);\n      props.push(prop);\n      // propCount += Number(prop);\n      // keys.push(key);\n      // values.push(apartment[key]);\n    }\n  }\n  // console.log(props);\n  propCount = props.length;\n\n  return propCount;\n}\n\nconsole.log(countProps({}));\nconsole.log(countProps({ name: \"Mango\", age: 2 }));\nconsole.log(countProps({ mail: \"poly@mail.com\", isOnline: true, score: 500 }));\n\nfunction countTotalSalary(salaries) {\n  let totalSalary = 0;\n\n  const values = Object.values(salaries);\n  for (let value of values) {\n    totalSalary += value;\n  }\n  return totalSalary;\n}\n\nconsole.log(countTotalSalary({ mango: 100, poly: 150, alfred: 80 }));\n\n// _______________________________________________\n\nconst products = [\n  { name: \"Radar\", price: 1300, quantity: 4 },\n  { name: \"Scanner\", price: 2700, quantity: 3 },\n  { name: \"Droid\", price: 400, quantity: 7 },\n  { name: \"Grip\", price: 1200, quantity: 9 },\n];\n\nfunction getProductPrice(productName) {\n  let price;\n  for (let product of products) {\n    if (productName === product.name) {\n      price = product.price;\n      break;\n    }\n    if (productName !== product.name) {\n      price = null;\n    }\n  }\n  return price;\n}\n\nconsole.log(getProductPrice(\"Radar\"));\nconsole.log(getProductPrice(\"Engine\"));\n\n// const products = [\n//   { name: \"Radar\", price: 1300, quantity: 4 },\n//   { name: \"Scanner\", price: 2700, quantity: 3 },\n//   { name: \"Droid\", price: 400, quantity: 7 },\n//   { name: \"Grip\", price: 1200, quantity: 9 },\n// ];\n\nfunction getAllPropValues(propName) {\n  // Change code below this line\n  let props = [];\n  for (let product of products) {\n    if (propName === \"name\") {\n      props.push(product.name);\n    }\n    if (propName === \"price\") {\n      props.push(product.price);\n    }\n    if (propName === \"quantity\") {\n      props.push(product.quantity);\n    }\n  }\n\n  return props;\n  // Change code above this line\n}\n\nconsole.log(getAllPropValues(\"name\"));\n\nfunction calculateTotalPrice(productName) {\n  // Change code below this line\n  let total;\n  for (let product of products) {\n    // console.log(product);\n    // console.log(product.price);\n    // console.log(product.quantity);\n    // console.log(product.price * product.quantity);\n    if (productName === product.name) {\n      total = product.price * product.quantity;\n    }\n  }\n\n  return total;\n  // Change code above this line\n}\n\nconsole.log(calculateTotalPrice(\"Radar\"));\n\n// __________________________________________\n\n// data = {\n//   text: \"Mary\",\n//   category: 4,\n//   priority: 1,\n// };\n\n// const {text: \"Mary\", category: 4, priority: 1,} = data\n\nfunction makeTask(data) {\n  const completed = false;\n  const category = \"General\";\n  const priority = \"Normal\";\n  // Change code below this line\n  const newObject = {\n    category: category,\n    priority: priority,\n    completed: completed,\n    ...data,\n  };\n\n  return newObject;\n  // Change code above this line\n}\n\nconsole.log(\n  makeTask({\n    category: \"Homemade\",\n    priority: \"Low\",\n    text: \"Take out the trash\",\n  })\n);\n\n// ________________________________\n\nfunction findMatches(array, ...args) {\n  const matches = []; // Don't change this line\n  for (let arg of args) {\n    if (array.includes(arg)) {\n      matches.push(arg);\n    }\n  }\n  // Change code above this line\n  return matches;\n}\n\nconsole.log(findMatches([1, 2, 3, 4, 5], 1, 8, 2, 7));\n\n// ____________________________________________\n// const atTheOldToad = {\n//   potions: [\"Speed potion\", \"Dragon breath\", \"Stone skin\"],\n//   // Change code below this line\n//   getPotions() {\n//     return this.potions;\n//   },\n//   // Change code above this line\n// };\n\n// console.log(atTheOldToad.getPotions());\n\n// _____________________________________\n// const atTheOldToad = {\n//   potions: [\"Speed potion\", \"Dragon breath\", \"Stone skin\"],\n//   removePotion(potionName) {\n//     const IndexOf = this.potions.indexOf(potionName);\n//     return this.potions.splice(IndexOf, 1);\n\n//   },\n// };\n\n// console.log(atTheOldToad.removePotion(\"Dragon breath\"));\n// console.log(atTheOldToad.removePotion(\"Speed potion\"));\n\nconst atTheOldToad = {\n  potions: [\n    { name: \"Speed potion\", price: 460 },\n    { name: \"Dragon breath\", price: 780 },\n    { name: \"Stone skin\", price: 520 },\n  ],\n\n  getPotions() {\n    return this.potions;\n  },\n\n  addPotion(newPotion) {\n    for (let potion of this.potions) {\n      // console.log(potion);\n      // console.log(potion.name);\n\n      for (let key in potion) {\n        if (newPotion[key] === potion[key]) {\n          return `Error! Potion ${newPotion.name} is already in your inventory!`;\n        }\n        // return this.potions.push(newPotion);\n      }\n    }\n    return this.potions.push(newPotion);\n  },\n\n  removePotion(potionName) {\n    for (let potion of this.potions) {\n      if (potionName === potion.name) {\n        const potionIndex = this.potions.indexOf(potion);\n        this.potions.splice(potionIndex, 1);\n        return this.potions;\n      }\n    }\n    return `Potion ${potionName} is not in inventory!`;\n  },\n\n  updatePotionName(oldName, newName) {\n    console.log(this.potions);\n    for (let potion of this.potions) {\n      console.log(potion);\n      if (potion.name === oldName) {\n        potion.name = newName;\n        return this.potions;\n      }\n    }\n    return `Potion ${oldName} is not in inventory!`;\n  },\n};\n\nconsole.log(atTheOldToad.getPotions());\nconsole.log(atTheOldToad.addPotion({ name: \"Invisibility\", price: 620 }));\nconsole.log(atTheOldToad.addPotion({ name: \"Speed potion\", price: 460 }));\nconsole.log(atTheOldToad.addPotion({ name: \"Power potion\", price: 270 }));\nconsole.log(atTheOldToad.addPotion({ name: \"Dragon breath\", price: 700 }));\nconsole.log(atTheOldToad.addPotion({ name: \"Stone skin\", price: 240 }));\nconsole.log(atTheOldToad.addPotion({ name: \"Dragon breath\", price: 700 }));\nconsole.log(atTheOldToad.removePotion(\"Dragon breath\"));\nconsole.log(atTheOldToad.removePotion(\"Speed potion\"));\nconsole.log(atTheOldToad.updatePotionName(\"Dragon breath\", \"Polymorth\"));\nconsole.log(\n  atTheOldToad.updatePotionName(\"Stone skin\", \"Invulnerability potion\")\n);\n\nfunction makePizza(pizzaName, callback) {\n  console.log(`Pizza ${pizzaName} is being prepared, please wait...`);\n  callback(pizzaName);\n}\n\nmakePizza(\"Royal Grand\", function deliverPizza(pizzaName) {\n  console.log(`Delivering pizza ${pizzaName}.`);\n});\n// Change code below this line\n\nmakePizza(\"Ultracheese\", function eatPizza(pizzaName) {\n  console.log(`Eating pizza ${pizzaName}`);\n});\n\nconst pizzaPalace = {\n  pizzas: [\"Ultracheese\", \"Smoked\", \"Four meats\"],\n  order(pizzaName, onSuccess, onError) {\n    if (this.pizzas.includes(pizzaName)) {\n      return onSuccess(pizzaName);\n    }\n    const error = `There is no pizza with a name ${pizzaName} in the assortment.`;\n    return onError(error);\n  },\n};\n// Change code above this line\n\n// Callback for onSuccess\nfunction makePizza(pizzaName) {\n  return `Your order is accepted. Cooking pizza ${pizzaName}.`;\n}\n\n// Callback for onError\nfunction onOrderError(error) {\n  return `Error! ${error}`;\n}\n\n// Method calls with callbacks\npizzaPalace.order(\"Smoked\", makePizza, onOrderError);\npizzaPalace.order(\"Four meats\", makePizza, onOrderError);\npizzaPalace.order(\"Big Mike\", makePizza, onOrderError);\npizzaPalace.order(\"Vienna\", makePizza, onOrderError);\nconsole.log(pizzaPalace.order(\"Smoked\", makePizza, onOrderError));\nconsole.log(pizzaPalace.order(\"Four meats\", makePizza, onOrderError));\nconsole.log(pizzaPalace.order(\"Big Mike\", makePizza, onOrderError));\nconsole.log(pizzaPalace.order(\"Vienna\", makePizza, onOrderError));\n\nconst calculateTotalPrice1 = (orderedItems) => {\n  let totalPrice = 0;\n  orderedItems.forEach((item) => {\n    totalPrice += item;\n  });\n  return totalPrice;\n};\n\n// // console.log(calculateTotalPrice1([412, 371, 94, 63, 176]));\n\n// // const filterArray = (numbers, value) => {\n// //   const filteredNumbers = [];\n\n// //   numbers.forEach((number) => {\n// //     if (number > value) {\n// //       filteredNumbers.push(number);\n// //     }\n// //   });\n\n// //   return filteredNumbers;\n// // };\n\n// // const getCommonElements = (firstArray, secondArray) => {\n// //   const commonElements = [];\n\n// //   firstArray.forEach((element) => {\n// //     if (secondArray.includes(element)) {\n// //       commonElements.push(element);\n// //     }\n// //   });\n\n// //   return commonElements;\n// // };\n\n// function changeEven(numbers, value) {\n//   // Change code below this line\n//   // for (let i = 0; i < numbers.length; i += 1) {\n//   //   if (numbers[i] % 2 === 0) {\n//   //     numbers[i] = numbers[i] + value;\n//   //   }\n//   // }\n//   const newArray = [];\n\n//   numbers.forEach((number) => {\n//     if (number % 2 === 0) {\n//       number += value;\n//       newArray.push(number);\n//       return number;\n//     }\n//     if (number % 2 !== 0) {\n//       newArray.push(number);\n//     }\n//   });\n//   // Change code above this line\n//   return newArray;\n// }\n\n// console.log(changeEven([44, 13, 81, 92, 36, 54], 100));\n// console.log(\n//   changeEven(\n//     [9, 24, 9, 22, 8, 22, 23, 16, 12, 14, 23, 15, 19, 18, 11, 20, 18],\n//     17\n//   )\n// );\n\n// const planets = [\"Earth\", \"Mars\", \"Venus\", \"Jupiter\"];\n// // Change code below this line\n// const planetsLengths = planets.map((planet) => {\n//   return planet.length;\n// });\n\n// console.log(planetsLengths);\n\n// const getUserNames = (users) => {\n//   return users.map((user) => {\n//     return user.name;\n//   });\n// };\n\n// const getUserEmails = (users) => {\n//   return users.map((user) => {\n//     return user.email;\n//   });\n// };\n\n// // const books = [\n// //   {\n// //     title: \"The Last Kingdom\",\n// //     author: \"Bernard Cornwell\",\n// //     genres: [\"adventure\", \"history\"],\n// //   },\n// //   {\n// //     title: \"Beside Still Waters\",\n// //     author: \"Robert Sheckley\",\n// //     genres: [\"fiction\", \"mysticism\"],\n// //   },\n// //   {\n// //     title: \"Redder Than Blood\",\n// //     author: \"Tanith Lee\",\n// //     genres: [\"horror\", \"mysticism\", \"adventure\"],\n// //   },\n// // ];\n// // // Change code below this line\n// // const allGenres = books.flatMap((book) => book.genres);\n// // const uniqueGenres = allGenres.filter(\n// //   (genre, index, allGenres) => allGenres.indexOf(genre) === index\n// // );\n\n// // const books = [\n// //   {\n// //     title: \"The Last Kingdom\",\n// //     author: \"Bernard Cornwell\",\n// //     rating: 8.38,\n// //   },\n// //   {\n// //     title: \"Beside Still Waters\",\n// //     author: \"Robert Sheckley\",\n// //     rating: 8.51,\n// //   },\n// //   {\n// //     title: \"The Dream of a Ridiculous Man\",\n// //     author: \"Fyodor Dostoevsky\",\n// //     rating: 7.75,\n// //   },\n// //   { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n// //   { title: \"Enemy of God\", author: \"Bernard Cornwell\", rating: 8.67 },\n// // ];\n\n// // const MIN_RATING = 8;\n// // const AUTHOR = \"Bernard Cornwell\";\n// // // Change code below this line\n\n// // const topRatedBooks = books.filter((book) => book.rating >= MIN_RATING);\n\n// // const booksByAuthor = books.filter((book) => book.author === AUTHOR);\n\n// // console.log(topRatedBooks);\n// // console.log(booksByAuthor);\n\n// const users = [\n//   {\n//     name: \"Moore Hensley\",\n//     email: \"moorehensley@indexia.com\",\n//     eyeColor: \"blue\",\n//     friends: [\"Sharron Pace\"],\n//     isActive: false,\n//     balance: 2811,\n//     gender: \"male\",\n//     age: 37,\n//   },\n//   {\n//     name: \"Sharlene Bush\",\n//     email: \"sharlenebush@tubesys.com\",\n//     eyeColor: \"blue\",\n//     friends: [\"Briana Decker\", \"Sharron Pace\"],\n//     isActive: true,\n//     balance: 3821,\n//     gender: \"female\",\n//     age: 34,\n//   },\n//   {\n//     name: \"Ross Vazquez\",\n//     email: \"rossvazquez@xinware.com\",\n//     eyeColor: \"green\",\n//     friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n//     isActive: false,\n//     balance: 3793,\n//     gender: \"male\",\n//     age: 24,\n//   },\n//   {\n//     name: \"Elma Head\",\n//     email: \"elmahead@omatom.com\",\n//     eyeColor: \"green\",\n//     friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n//     isActive: true,\n//     balance: 2278,\n//     gender: \"female\",\n//     age: 21,\n//   },\n//   {\n//     name: \"Carey Barr\",\n//     email: \"careybarr@nurali.com\",\n//     eyeColor: \"blue\",\n//     friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n//     isActive: true,\n//     balance: 3951,\n//     gender: \"male\",\n//     age: 27,\n//   },\n//   {\n//     name: \"Blackburn Dotson\",\n//     email: \"blackburndotson@furnigeer.com\",\n//     eyeColor: \"brown\",\n//     friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n//     isActive: false,\n//     balance: 1498,\n//     gender: \"male\",\n//     age: 38,\n//   },\n//   {\n//     name: \"Sheree Anthony\",\n//     email: \"shereeanthony@kog.com\",\n//     eyeColor: \"brown\",\n//     friends: [\"Goldie Gentry\", \"Briana Decker\"],\n//     isActive: true,\n//     balance: 2764,\n//     gender: \"female\",\n//     age: 39,\n//   },\n// ];\n\n// const getFriends = (users) => {\n//   const allFriends = users.flatMap((user) => user.friends);\n//   const uniqueFriends = allFriends.filter(\n//     (friend, index, allFriends) => allFriends.indexOf(friend) === index\n//   );\n//   return uniqueFriends;\n// };\n\n// console.log(getFriends);\n\n// const getActiveUsers = (users) => {\n//   return users.filter((user) => user.isActive === true);\n// };\n\n// const getInactiveUsers = (users) => {\n//   return users.filter((user) => user.isActive === false);\n// };\n\n// const books = [\n//   {\n//     title: \"The Last Kingdom\",\n//     author: \"Bernard Cornwell\",\n//     rating: 8.38,\n//   },\n//   {\n//     title: \"Beside Still Waters\",\n//     author: \"Robert Sheckley\",\n//     rating: 8.51,\n//   },\n//   {\n//     title: \"The Dream of a Ridiculous Man\",\n//     author: \"Fyodor Dostoevsky\",\n//     rating: 7.75,\n//   },\n//   { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n// ];\n// const BOOK_TITLE = \"The Dream of a Ridiculous Man\";\n// const AUTHOR = \"Robert Sheckley\";\n// // Change code below this line\n\n// const bookWithTitle = books.find((book) => book.title === BOOK_TITLE);\n// const bookByAuthor = books.find((book) => book.author === AUTHOR);\n\n// const getUserWithEmail = (users, email) => {\n//   return users.find((user) => user.email === email);\n// };\n\n// const isEveryUserActive = (users) => {\n//   return users.every((user) => user.isActive === true);\n// };\n\n// const players = [\n//   { name: \"Mango\", playtime: 1270, gamesPlayed: 4 },\n//   { name: \"Poly\", playtime: 469, gamesPlayed: 2 },\n//   { name: \"Ajax\", playtime: 690, gamesPlayed: 3 },\n//   { name: \"Kiwi\", playtime: 241, gamesPlayed: 1 },\n// ];\n// // Change code below this line\n\n// const totalAveragePlaytimePerGame = players.reduce((total, player) => {\n//   return total + player.playtime / player.gamesPlayed;\n// }, 0);\n\n// const calculateTotalBalance = (users) => {\n//   return users.reduce((total, user) => {\n//     return total + user.balance;\n//   }, 0);\n// };\n\n// const getTotalFriendCount = (users) => {\n//   return users.reduce((totalFriends, user) => {\n//     return totalFriends + user.friends.length;\n//   }, 0);\n// };\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n// const authors = [\n//   \"Tanith Lee\",\n//   \"Bernard Cornwell\",\n//   \"Robert Sheckley\",\n//   \"Fyodor Dostoevsky\",\n// ];\n// Change code below this line\n\n// const ascendingReleaseDates = [...releaseDates].sort();\n\n// const alphabeticalAuthors = [...authors].sort();\n\n// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];\n// // Change code below this line\n\n// const ascendingReleaseDates = [...releaseDates].sort((a, b) => a - b);\n\n// const descendingReleaseDates = [...releaseDates].sort((a, b) => b - a);\n\nconst users = [\n  {\n    name: \"Moore Hensley\",\n    email: \"moorehensley@indexia.com\",\n    eyeColor: \"blue\",\n    friends: [\"Sharron Pace\"],\n    isActive: false,\n    balance: 2811,\n    gender: \"male\",\n  },\n  {\n    name: \"Sharlene Bush\",\n    email: \"sharlenebush@tubesys.com\",\n    eyeColor: \"blue\",\n    friends: [\"Briana Decker\", \"Sharron Pace\"],\n    isActive: true,\n    balance: 3821,\n    gender: \"female\",\n  },\n  {\n    name: \"Ross Vazquez\",\n    email: \"rossvazquez@xinware.com\",\n    eyeColor: \"green\",\n    friends: [\"Marilyn Mcintosh\", \"Padilla Garrison\", \"Naomi Buckner\"],\n    isActive: false,\n    balance: 3793,\n    gender: \"male\",\n  },\n  {\n    name: \"Elma Head\",\n    email: \"elmahead@omatom.com\",\n    eyeColor: \"green\",\n    friends: [\"Goldie Gentry\", \"Aisha Tran\"],\n    isActive: true,\n    balance: 2278,\n    gender: \"female\",\n  },\n  {\n    name: \"Carey Barr\",\n    email: \"careybarr@nurali.com\",\n    eyeColor: \"blue\",\n    friends: [\"Jordan Sampson\", \"Eddie Strong\"],\n    isActive: true,\n    balance: 3951,\n    gender: \"male\",\n  },\n  {\n    name: \"Blackburn Dotson\",\n    email: \"blackburndotson@furnigeer.com\",\n    eyeColor: \"brown\",\n    friends: [\"Jacklyn Lucas\", \"Linda Chapman\"],\n    isActive: false,\n    balance: 1498,\n    gender: \"male\",\n  },\n  {\n    name: \"Sheree Anthony\",\n    email: \"shereeanthony@kog.com\",\n    eyeColor: \"brown\",\n    friends: [\"Goldie Gentry\", \"Briana Decker\"],\n    isActive: true,\n    balance: 2764,\n    gender: \"female\",\n  },\n];\n\nconst sortByDescendingFriendCount = (users) => {\n  return [...users].sort(\n    (firstUser, secondUser) =>\n      firstUser.friends.length - secondUser.friends.length\n  );\n};\nconsole.log(sortByDescendingFriendCount(users));\n\nconst books = [\n  {\n    title: \"The Last Kingdom\",\n    author: \"Bernard Cornwell\",\n    rating: 8.38,\n  },\n  {\n    title: \"Beside Still Waters\",\n    author: \"Robert Sheckley\",\n    rating: 8.51,\n  },\n  {\n    title: \"The Dream of a Ridiculous Man\",\n    author: \"Fyodor Dostoevsky\",\n    rating: 7.75,\n  },\n  { title: \"Redder Than Blood\", author: \"Tanith Lee\", rating: 7.94 },\n  {\n    title: \"The Dreams in the Witch House\",\n    author: \"Howard Lovecraft\",\n    rating: 8.67,\n  },\n];\nconst MIN_BOOK_RATING = 8;\n// Change code below this line\n\nconst names = [...books]\n  .filter((book) => book.rating > MIN_BOOK_RATING)\n  .sort((firstBook, secondBook) =>\n    firstBook.author.localeCompare(secondBook.author)\n  )\n  .map((book) => book.author);\n\nconsole.log(names);\n\nconst getNamesSortedByFriendCount = (users) => {\n  return [...users]\n    .sort(\n      (firstUser, secondUser) =>\n        firstUser.friends.length - secondUser.friends.length\n    )\n    .map((user) => user.name);\n};\nconsole.log(getNamesSortedByFriendCount(users));\n\nconst getSortedFriends = (users) => {\n  const allFriends = [...users].flatMap((user) => user.friends);\n\n  const uniqueFriends = allFriends.filter(\n    (friend, index, allFriends) => allFriends.indexOf(friend) === index\n  );\n\n  uniqueFriends.sort((firstFriend, secondFriend) =>\n    firstFriend.localeCompare(secondFriend)\n  );\n\n  return uniqueFriends;\n};\n\nconsole.log(getSortedFriends(users));\n\nconst getTotalBalanceByGender = (users, gender) => {\n  const usersGender = users.filter(\n    (user, index, users) => user.gender === gender\n  );\n  return usersGender.reduce((total, user) => {\n    return total + user.balance;\n  }, 0);\n};\nconsole.log(getTotalBalanceByGender(users, \"male\"));\n\n// _________ 5 module_____________\n\n// const pizzaPalace = {\n//   pizzas: [\"Supercheese\", \"Smoked\", \"Four meats\"],\n//   // Change code below this line\n//   checkPizza(pizzaName) {\n//     return this.pizzas.includes(pizzaName);\n//   },\n//   order(pizzaName) {\n//     const isPizzaAvailable = this.checkPizza(pizzaName);\n\n//     if (!isPizzaAvailable) {\n//       return `Sorry, there is no pizza named «${pizzaName}»`;\n//     }\n\n//     return `Order accepted, preparing «${pizzaName}» pizza`;\n//   },\n//   // Change code above this line\n// };\n\nconst customer = {\n  username: \"Mango\",\n  balance: 24000,\n  discount: 0.1,\n  orders: [\"Burger\", \"Pizza\", \"Salad\"],\n  // Change code below this line\n  getBalance() {\n    return this.balance;\n  },\n  getDiscount() {\n    return this.discount;\n  },\n  setDiscount(value) {\n    this.discount = value;\n  },\n  getOrders() {\n    return this.orders;\n  },\n  addOrder(cost, order) {\n    this.balance -= cost - cost * this.discount;\n    this.orders.push(order);\n  },\n  // Change code above this line\n};\n\ncustomer.setDiscount(0.15);\nconsole.log(customer.getDiscount()); // 0.15\ncustomer.addOrder(5000, \"Steak\");\nconsole.log(customer.getBalance()); // 19750\nconsole.log(customer.getOrders()); // [\"Burger\", \"Pizza\", \"Salad\", \"Steak\"]\n\nconst historyService = {\n  orders: [\n    { email: \"jacob@hotmail.com\", dish: \"Burrito\" },\n    { email: \"solomon@topmail.net\", dish: \"Burger\" },\n    { email: \"artemis@coldmail.net\", dish: \"Pizza\" },\n    { email: \"solomon@topmail.net\", dish: \"Apple pie\" },\n    { email: \"jacob@hotmail.com\", dish: \"Taco\" },\n  ],\n  // Change code below this line\n  getOrdersLog() {\n    return this.orders\n      .map((order) => `email: ${order.email} dish: ${order.dish}`)\n      .join(\" - \");\n  },\n  getEmails() {\n    const emails = this.orders.map((order) => order.email);\n    const uniqueEmails = new Set(emails);\n    return [...uniqueEmails];\n  },\n  getOrdersByEmail(email) {\n    return this.orders.filter((order) => order.email === email);\n  },\n  // Change code above this line\n};\n\nconst parent = {\n  name: \"Stacey\",\n  surname: \"Moore\",\n  age: 54,\n  heritage: \"Irish\",\n};\n// Change code below this line\nconst child = Object.create(parent);\n// const child = { name: \"Jason\", age: 27, __proto__: parent };\n\n// Change code above this line\nchild.name = \"Jason\";\nchild.age = 27;\n\nconst ancestor = {\n  name: \"Paul\",\n  age: 83,\n  surname: \"Dawson\",\n  heritage: \"Irish\",\n};\n// Change code below this line\n\n// const parent = Object.create(ancestor);\n// parent.name = \"Stacey\";\n// parent.surname = \"Moore\";\n// parent.age = 54;\n\n// const child = Object.create(parent);\n// child.name = \"Jason\";\n// child.age = 27;\n\n// Change code above this line\n\n// class Car {\n//   // Change code below this line\n//   constructor(brand, model, price) {\n//     this.brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n//   // Change code above this line\n// }\n\n// console.log(new Car(\"Audi\", \"Q3\", 36000));\n// console.log(new Car(\"BMW\", \"X1\", 38900));\n\n//  деструктуризаціяю Патерн Об єкт параметрів\n\n// class Car {\n//   // Change code below this line\n//   constructor({ brand, model, price }) {\n//     this.brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n//   // Change code above this line\n// }\n\n// console.log(new Car({ brand: \"BMW\", model: \"X5\", price: 58900 }));\n\n// class Car {\n//   constructor({ brand, model, price }) {\n//     this.brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n//   // Change code below this line\n//   getPrice() {\n//     return this.price;\n//   }\n//   changePrice(newPrice) {\n//     return (this.price = newPrice);\n//   }\n//   // Change code above this line\n// }\n\nclass Storage {\n  constructor(items) {\n    this.items = items;\n  }\n\n  getItems() {\n    return this.items;\n  }\n  addItem(newItem) {\n    return this.items.push(newItem);\n  }\n  removeItem(itemToRemove) {\n    const indexOf = this.items.indexOf(itemToRemove);\n\n    return this.items.splice(indexOf, 1);\n  }\n}\n\n// Change code above this line\nconst storage = new Storage([\"Nanitoids\", \"Prolonger\", \"Antigravitator\"]);\nconsole.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\"]\nstorage.addItem(\"Droid\");\nconsole.log(storage.getItems()); // [\"Nanitoids\", \"Prolonger\", \"Antigravitator\", \"Droid\"]\nstorage.removeItem(\"Prolonger\");\nconsole.log(storage.getItems()); // [\"Nanitoids\", \"Antigravitator\", \"Droid\"]\n\nclass StringBuilder {\n  constructor(initialValue) {\n    this.value = initialValue;\n  }\n  getValue() {\n    return this.value;\n  }\n\n  padEnd(str) {\n    return (this.value = this.value + str);\n  }\n\n  padStart(str) {\n    return (this.value = str + this.value);\n  }\n  padBoth(str) {\n    this.padEnd(str);\n    this.padStart(str);\n    // return (this.value = str + this.value + str);\n  }\n}\n\nconsole.dir(StringBuilder);\n// Change code above this line\nconst builder = new StringBuilder(\".\");\nconsole.log(builder.getValue()); // \".\"\n\nbuilder.padStart(\"^\");\nconsole.log(builder.getValue()); // \"^.\"\nbuilder.padEnd(\"^\");\nconsole.log(builder.getValue()); // \"^.^\"\nbuilder.padBoth(\"=\");\nconsole.log(builder.getValue()); // \"=^.^=\"\n\n// class Car {\n//   #brand;\n//   constructor({ brand, model, price }) {\n//     this.#brand = brand;\n//     this.model = model;\n//     this.price = price;\n//   }\n\n//   getBrand() {\n//     return this.#brand;\n//   }\n\n//   changeBrand(newBrand) {\n//     this.#brand = newBrand;\n//   }\n// }\n// console.log(new Car({ brand: \"bmw\", model: \"X5\", price: 58900 }));\n\nclass Car {\n  // Change code below this line\n  static MAX_PRICE = 50000;\n\n  #price;\n\n  constructor({ price }) {\n    this.#price = price;\n  }\n\n  get price() {\n    return this.#price;\n  }\n\n  set price(newPrice) {\n    this.#price = newPrice;\n    if (this.#price >= Car.MAX_PRICE) {\n      return (this.#price = 49000);\n    }\n    return (this.#price = newPrice);\n  }\n}\nconsole.log(Car.MAX_PRICE);\n\nconst audi = new Car({ price: 35000 });\nconsole.log(audi.price); // 35000\n\naudi.price = 49000;\nconsole.log(audi.price); // 49000\n\naudi.price = 51000;\nconsole.log(audi.price); // 49000\n\n// class Car {\n//   static #MAX_PRICE = 50000;\n//   // Change code below this line\n//   static checkPrice(price) {\n//     if (price > this.#MAX_PRICE) {\n//       return \"Error! Price exceeds the maximum\";\n//     }\n\n//     return \"Success! Price is within acceptable limits\";\n//   }\n//   // Change code above this line\n//   constructor({ price }) {\n//     this.price = price;\n//   }\n// }\n\n// const audi = new Car({ price: 36000 });\n// const bmw = new Car({ price: 64000 });\n\n// console.log(Car.checkPrice(audi.price)); // \"Success! Price is within acceptable limits\"\n// console.log(Car.checkPrice(bmw.price)); // \"Error! Price exceeds the maximum\"\n\n// class User {\n//   constructor(email) {\n//     this.email = email;\n//   }\n\n//   get email() {\n//     return this.email;\n//   }\n\n//   set email(newEmail) {\n//     this.email = newEmail;\n//   }\n// }\n// // Change code below this line\n\n// class Admin extends User {\n//   static AccessLevel = {\n//     BASIC: \"basic\",\n//     SUPERUSER: \"superuser\",\n//   };\n// }\n\n// class User {\n//   email;\n\n//   constructor(email) {\n//     this.email = email;\n//   }\n\n//   get email() {\n//     return this.email;\n//   }\n\n//   set email(newEmail) {\n//     this.email = newEmail;\n//   }\n// }\n\n// class Admin extends User {\n//   // Change code below this line\n\n//   static AccessLevel = {\n//     BASIC: \"basic\",\n//     SUPERUSER: \"superuser\",\n//   };\n\n//   constructor({ email, accessLevel }) {\n//     super(email);\n//   }\n//   // Change code above this line\n// }\n\n// const mango = new Admin({\n//   email: \"mango@mail.com\",\n//   accessLevel: Admin.AccessLevel.SUPERUSER,\n// });\n\n// console.log(mango.email); // \"mango@mail.com\"\n// console.log(mango.accessLevel); // \"superuser\"\n\nclass User {\n  email;\n\n  constructor(email) {\n    this.email = email;\n  }\n\n  get email() {\n    return this.email;\n  }\n\n  set email(newEmail) {\n    this.email = newEmail;\n  }\n}\nclass Admin extends User {\n  // Change code below this line\n\n  static AccessLevel = {\n    BASIC: \"basic\",\n    SUPERUSER: \"superuser\",\n  };\n\n  blacklist(email) {\n    this.blacklistedEmails.push(email);\n  }\n\n  isBlacklisted(email) {\n    if (this.blacklistedEmails.includes(email)) {\n      return true;\n    }\n    return false;\n  }\n\n  constructor({ email, accessLevel }) {\n    super(email);\n    this.accessLevel = accessLevel;\n    this.blacklistedEmails = [];\n  }\n\n  // Change code above this line\n}\n\nconst mango = new Admin({\n  email: \"mango@mail.com\",\n  accessLevel: Admin.AccessLevel.SUPERUSER,\n});\n\nconsole.log(mango.email); // \"mango@mail.com\"\nconsole.log(mango.accessLevel); // \"superuser\"\n\nmango.blacklist(\"poly@mail.com\");\nconsole.log(mango.blacklistedEmails); // [\"poly@mail.com\"]\nconsole.log(mango.isBlacklisted(\"mango@mail.com\")); // false\nconsole.log(mango.isBlacklisted(\"poly@mail.com\")); // true\n"],"names":["_arrayLikeToArray","arr","len","checkForSpam","message1","toLowerCase","includes","checkForName","fullName","name","console","log","pricee","stars","option","message","_$i","employees","totalSalary","minSalary","maxSalary","_$i1","salary","Math","round","random","concat","min","max","total","_$i2","array","friends","table","lastIndex","length","i","title","slugify","title1","split","join","message2","makeArray","firstArray","secondArray","maxLength","allArray","allArray1","slice","clients","_$i3","findLongestWord","string","words","biggestWord","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","word","value","err","return","createArrayOfNumbers","min1","max1","numbers","push","filterArray","filterNumbers","number","getCommonElements","array1","array2","array3","getEvenNumbers","start","end","array4","_$i4","array5","message3","apartment","imgUrl","descr","rating","price","tags","owner","phone","email","countProps","object","props","prop","hasOwnProperty","countTotalSalary","salaries","totalSalary1","values","Object","age","mail","isOnline","score","mango","poly","alfred","products","quantity","getProductPrice","productName","product","getAllPropValues","propName","calculateTotalPrice","total1","makeTask","data","_objectSpread","category","priority","completed","findMatches","array6","_len","arguments","args","Array","_key","matches","arg","text","atTheOldToad","potions","getPotions","this","addPotion","newPotion","potion","key","removePotion","potionName","potionIndex","indexOf","splice","updatePotionName","oldName","newName","makePizza","pizzaName","callback","pizzaPalace","pizzas","order","onSuccess","onError","onOrderError","error","calculateTotalPrice1","orderedItems","totalPrice","forEach","item","users","eyeColor","isActive","balance","gender","sortByDescendingFriendCount","users1","_toConsumableArray","sort","firstUser","secondUser","books","author","MIN_BOOK_RATING","names","filter","book","firstBook","secondBook","localeCompare","map","getNamesSortedByFriendCount","users2","user","getSortedFriends","users3","uniqueFriends","flatMap","friend","index","allFriends","firstFriend","secondFriend","getTotalBalanceByGender","users4","reduce","total2","customer","username","discount","orders","getBalance","getDiscount","setDiscount","getOrders","addOrder","cost","historyService","dish","getOrdersLog","getEmails","emails","Set","getOrdersByEmail","parent","surname","heritage","child","create","ancestor","Storage","items","newItem","itemToRemove","storage","getItems","addItem","removeItem","StringBuilder","initialValue","str","padEnd","padStart","dir","builder","getValue","padBoth","_price","WeakMap","Car","param","_classPrivateFieldInit","_classPrivateFieldGet","newPrice","MAX_PRICE","_classPrivateFieldSet","_defineProperty","audi","User","newEmail","Admin","accessLevel","_this","blacklistedEmails","BASIC","SUPERUSER","AccessLevel","blacklist","isBlacklisted"],"version":3,"file":"index.b4335cd8.js.map"}